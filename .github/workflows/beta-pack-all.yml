name: Build Beta

on:
  workflow_dispatch:

jobs:
  Android:
    name: Android
    runs-on: ubuntu-latest
    steps:
      - name: Check out git repository
        uses: actions/checkout@v4

      - name: Setup Env
        uses: ./.github/actions/setup

      - name: Build Packages
        shell: bash
        run: |
          cd android
          echo ${{ secrets.KEYSTORE_STORE_FILE_BASE64 }} | base64 --decode > app/${{ secrets.KEYSTORE_STORE_FILE }}
          ./gradlew assembleRelease -PMYAPP_UPLOAD_STORE_FILE='${{ secrets.KEYSTORE_STORE_FILE }}' -PMYAPP_UPLOAD_KEY_ALIAS='${{ secrets.KEYSTORE_KEY_ALIAS }}' -PMYAPP_UPLOAD_STORE_PASSWORD='${{ secrets.KEYSTORE_PASSWORD }}' -PMYAPP_UPLOAD_KEY_PASSWORD='${{ secrets.KEYSTORE_KEY_PASSWORD }}'
          rm -f app/${{ secrets.KEYSTORE_STORE_FILE }}

      # Push tag to GitHub if package.json version's tag is not tagged
      - name: Get package version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV

      - name: Generate file MD5
        run: |
          cd android/app/build/outputs/apk/release
          md5sum *.apk

      - name: Upload Artifact
        uses: ./.github/actions/upload-artifact
        env:
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}


  # Android_5:
  #   name: Android_5
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out git repository
  #       uses: actions/checkout@v4
  #       with:
  #         ref: android_5

  #     - name: Setup Env
  #       uses: ./.github/actions/setup

  #     - name: Build Packages
  #       shell: bash
  #       run: |
  #         cd android
  #         echo ${{ secrets.KEYSTORE_STORE_FILE_BASE64 }} | base64 --decode > app/${{ secrets.KEYSTORE_STORE_FILE }}
  #         ./gradlew assembleRelease -PMYAPP_UPLOAD_STORE_FILE='${{ secrets.KEYSTORE_STORE_FILE }}' -PMYAPP_UPLOAD_KEY_ALIAS='${{ secrets.KEYSTORE_KEY_ALIAS }}' -PMYAPP_UPLOAD_STORE_PASSWORD='${{ secrets.KEYSTORE_PASSWORD }}' -PMYAPP_UPLOAD_KEY_PASSWORD='${{ secrets.KEYSTORE_KEY_PASSWORD }}'
  #         rm -f app/${{ secrets.KEYSTORE_STORE_FILE }}

  #     # Push tag to GitHub if package.json version's tag is not tagged
  #     - name: Get package version
  #       run: |
  #         node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV
  #         echo "COMMIT_SHA=$(git show -s --format=%H)" >> $GITHUB_ENV

  #     - name: Generate file MD5
  #       run: |
  #         echo "current commit sha: ${{ env.COMMIT_SHA }}"
  #         cd android/app/build/outputs/apk/release
  #         md5sum *.apk

  #     - name: Upload Artifact
  #       uses: ./.github/actions/upload-artifact
  #       env:
  #         PACKAGE_TYPE: 'Android_5'
  #         PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: android/app/build/outputs/apk/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rename Release
        run: |
          release_id=$(echo "${{ steps.create_release.outputs.release_id }}" | tr -d '\n')
          new_name="bea"

          echo "::set-env name=RELEASE_NAME::${new_name}"
          curl -X PATCH -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${release_id}" \
            -d "{\"name\":\"${new_name}\"}"

      - name: Upload Artifact
        uses: ./.github/actions/upload-artifact
        env:
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
